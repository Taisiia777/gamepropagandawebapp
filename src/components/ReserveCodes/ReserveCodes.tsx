import React, { useState } from 'react';
import styles from './ReserveCodes.module.css';
import AccordionItem from './AccordionItem';
import { useSelector } from "react-redux";
import { RootState } from "../../store.ts";
const accordionItems = [
    { title: '–ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–∫—É', 
    iconSrc: 'https://cdn.builder.io/api/v1/image/assets/TEMP/cea3023ef9d7bf240df69818ee19579508257c07cf2463eb7de4d5811dd580e4?placeholderIfAbsent=true&apiKey=f19410a7ed964887a882a08cb3ad097c', 
    content: `‚û°Ô∏è –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã, —Ç–µ–±–µ –Ω—É–∂–Ω–æ:

1. –í–æ–π—Ç–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏, –∑–∞—Ç–µ–º –≤ —Ä–∞–∑–¥–µ–ª ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å¬ª –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª ¬´–î–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è¬ª.

2. –í—ã–±—Ä–∞—Ç—å ¬´–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ-–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä¬ª –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º. –ù–∞ —ç–∫—Ä–∞–Ω–µ –ø–æ—è–≤–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫ –∫–æ–¥–æ–≤, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–∏—Å–ª–∞—Ç—å –≤ —ç—Ç–æ—Ç —á–∞—Ç.
`
    },
    { title: '–ì–¥–µ –Ω–∞–π—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã', iconSrc: 'https://cdn.builder.io/api/v1/image/assets/TEMP/cea3023ef9d7bf240df69818ee19579508257c07cf2463eb7de4d5811dd580e4?placeholderIfAbsent=true&apiKey=f19410a7ed964887a882a08cb3ad097c',
         content: `‚ùì –û—Ç–º–µ–Ω–∏–ª –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª –∫–æ–¥—ã? –£ —Ç–µ–±—è –µ—Å—Ç—å –¥–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞:

–í–∞—Ä–∏–∞–Ω—Ç ‚Ññ1

–û—Ç–º–µ–Ω–∏—Ç—å –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é (–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ ‚Äî –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî –î–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è ‚Äî –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã) –∏ –ø—Ä–∏–≤—è–∑–∞—Ç—å –µ–µ –∑–∞–Ω–æ–≤–æ. –¢–µ–º —Å–∞–º—ã–º, –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã.

–í–∞—Ä–∏–∞–Ω—Ç ‚Ññ2

–ù–∞–π—Ç–∏ –∫–æ–¥—ã –≤ —Å–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ PSN (–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ ‚Äî –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî –î–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è ‚Äî –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã).¬†

üëâ –ü–æ–ª—É—á–∏–≤ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã, –ø—Ä–∏—à–ª–∏ –∏—Ö –≤ —ç—Ç–æ—Ç —á–∞—Ç.

        ` },
    { title: '–ö–∞–∫ –æ–±–Ω–æ–≤–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã', iconSrc: 'https://cdn.builder.io/api/v1/image/assets/TEMP/cea3023ef9d7bf240df69818ee19579508257c07cf2463eb7de4d5811dd580e4?placeholderIfAbsent=true&apiKey=f19410a7ed964887a882a08cb3ad097c',
         content: `‚ùì –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã? –í–æ—Ç —á—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:¬†

1. –í–æ–π–¥–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏, –∑–∞—Ç–µ–º –≤ —Ä–∞–∑–¥–µ–ª ¬´–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å¬ª –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª ¬´–î–≤—É—Ö—ç—Ç–∞–ø–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è¬ª.

2. –û—Ç–º–µ–Ω–∏ –¥–≤—É—Ö—ç—Ç–∞–ø–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –∏ –ø—Ä–∏–≤—è–∂–∏ –µ–µ —Å–Ω–æ–≤–∞. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —É —Ç–µ–±—è –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –∫–æ–¥—ã.

3. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–¥–æ–≤, –ø—Ä–∏—à–ª–∏ –∏—Ö –≤ —ç—Ç–æ—Ç —á–∞—Ç.

        ` },
];

const ReserveCodes: React.FC = () => {
    const [isFormVisible, setIsFormVisible] = useState(false);
    const [verificationCode, setVerificationCode] = useState(''); // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–æ–¥–∞
const [successMessage, setSuccessMessage] = useState(''); // –î–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—Ö–µ
const userId = useSelector((state: RootState) => state.user.userId);

    const handleAddButtonClick = () => {
        setIsFormVisible(!isFormVisible);
    };
    const handleCodeChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        setVerificationCode(e.target.value);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const handleSubmitCode = async (e: React.FormEvent) => {
        e.preventDefault();

        try {
            const response = await fetch(`${import.meta.env.VITE_NGROK_URL}/users/${userId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'ngrok-skip-browser-warning': '1',
                },
                body: JSON.stringify({ verificationCode }),
            });

            if (response.ok) {
                setSuccessMessage('–ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.');
                setVerificationCode(''); // –û—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            } else {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞:', error);
            setSuccessMessage('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–¥–∞');
        }
    };
    return (
        <main className={styles.mainContainer}>
            <section className={styles.contentWrapper}>
                <h1 className={styles.title}>–†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã</h1>
                <p className={styles.description}>
                    –ù–∞–ø–∏—à–∏—Ç–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã –æ—Ç —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ PlayStation ‚Äî –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Ö, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–µ–µ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –≤–∞—à–∏ –∑–∞–∫–∞–∑—ã.
                </p>
                <p className={styles.description}>
                    –ß—Ç–æ–±—ã —É –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ—è–≤–∏–ª–∏—Å—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã, –≤–∫–ª—é—á–∏—Ç–µ –≤ –Ω—ë–º –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é.
                </p>
            </section>
            <section className={styles.infoBox}>
                <h2 className={styles.infoBoxTitle}>–ö–∞–∫ –Ω–∞–π—Ç–∏ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–¥—ã?</h2>
                <p className={styles.infoBoxContent}>
                    –ù–∞ PS5: –Ω–∞–∂–º–∏—Ç–µ —Å–≤–µ—Ä—Ö—É —Å–ø—Ä–∞–≤–∞ –Ω–∞ Settings &gt; Users and Accounts &gt; Account &gt; Security &gt; 2-Step Verification &gt; Backup Codes.
                </p>
                <p className={styles.infoBoxContent}>
                    –ù–∞ PS4: –Ω–∞–∂–º–∏—Ç–µ —Å–≤–µ—Ä—Ö—É —Å–ø—Ä–∞–≤–∞ –Ω–∞ Settings &gt; Account Management &gt; Account Information &gt; Security &gt; 2-Step Verification &gt; Backup Codes.
                </p>
                {!isFormVisible && (

                    <button className={styles.addButton} onClick={handleAddButtonClick}>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–¥</button>  )}


                {/* {isFormVisible && (
                    <form className={styles.container}>
                        <input
                            type="text"
                            id="codeInput"
                            className={styles.input}
                            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥"
                            aria-label="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥"
                        />
                        <img src="img/code.svg" alt="icon" className={styles.icon} />
                    </form>
                )} */}
{isFormVisible && (
    <form className={styles.form} onSubmit={handleSubmitCode} style={{display:"flex", flexDirection:"row", maxHeight:"50px"}}>
        <input
            type="text"
            value={verificationCode}
            onChange={handleCodeChange}
            className={styles.input}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥"
            aria-label="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–¥"
        />
        <button type="submit" className={styles.submitButton} style={{padding: "0"}}>
        <img src="img/code.svg" alt="icon" className={styles.icon} />

        </button>
    </form>
)}

{successMessage && <p className={styles.successMessage}>{successMessage}</p>}


            </section>
            <section className={styles.accordionContainer}>
                {/* {accordionItems.map((item, index) => (
                    <AccordionItem key={index} title={item.title} iconSrc={item.iconSrc} />
                ))} */}
                  {accordionItems.map((item, index) => (
                    <AccordionItem
                        key={index}
                        title={item.title}
                        iconSrc={item.iconSrc}
                        content={item.content}
                    />
                ))}
            </section>
        </main>
    );
};

export default ReserveCodes;